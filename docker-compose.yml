version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"  # Next.js frontend
      - "8888:8888"  # Netlify Functions
    environment:
      - NODE_ENV=development
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/swift_travel_dev
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
    networks:
      - swift-travel-network

  # PostgreSQL database for local development
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: swift_travel_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/database/src/migrations:/docker-entrypoint-initdb.d/
    networks:
      - swift-travel-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - swift-travel-network

  # PostgreSQL admin interface (optional)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@swifttravel.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - swift-travel-network

  # Redis admin interface (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - swift-travel-network

volumes:
  postgres_data:
  redis_data:

networks:
  swift-travel-network:
    driver: bridge